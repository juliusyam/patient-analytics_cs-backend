@using Microsoft.IdentityModel.Tokens
@inject IJSRuntime JSRuntime
@inject PatientAnalyticsAuthStateProvider PatientAnalyticsAuthStateProvider
@inject IStringLocalizer<Localized> Localized
@rendermode InteractiveServer

<CascadingAuthenticationState>
    <HttpStatusExceptionIndicator Exception="_exception" Size="Sm" />
    
    @if (_isCheckingUserCredentials)
    {
        <div class="anchor-center-container">
            <div class="box container-body has-text-centered">
                <h3 class="title is-3">@Localized["Label_Loading"]</h3>
                <progress class="progress is-small is-primary" max="100"/>
            </div>
        </div>
    }
    else
    {
        <Router AppAssembly="typeof(Program).Assembly">
            <Found Context="routeData">
                <RouteView RouteData="routeData"/>
                <FocusOnNavigate RouteData="routeData" Selector="h1"/>
            </Found>
        </Router>
    }
</CascadingAuthenticationState>

@code{
    private bool _isCheckingUserCredentials = true;
    private HttpStatusCodeException? _exception;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                await PatientAnalyticsAuthStateProvider.OnAfterRenderAsync();
            }
            catch (HttpStatusCodeException exception)
            {
                _exception = exception;
            }

            _isCheckingUserCredentials = false;
        }
        
        StateHasChanged();
    }
}